*, ::slotted(*) {
	margin: 0;
	padding: 0;
}

#root::before {
	
	--size: .6rem;
	
	background: rgba(160,160,160,1);
	border-radius: 100%;
	display: block;
	content: "";
	height: var(--size);
	position: relative;
	width: var(--size);
	transition: scale .2s ease 0s;
	
}
#root:hover::before {
	
	scale: 1.5;
	
}
:host(:not([selected])) #root:not(:hover)::before {
	
	background: none;
	border: 1px solid rgba(160,160,160,1);
	box-sizing: border-box;
	
}
#root:not(:hover) #body {
	
	display: none;
	
}

#body {
	align-items: center;
	display: flex;
	height: max-content;
	position: absolute;
	translate: 0 -50%;
	width: max-content;
	z-index: 4;
	writing-mode: horizontal-tb;
}

#node {
	
	align-items: center;
	background: var(--button-bg);
	border-radius: .4rem;
	box-shadow:	0px 0px 0px 1px rgba(0,0,0,.8),
					0px 0px 0px 1px rgba(255,255,255,.9) inset,
					0px .2rem .3rem .05rem rgba(0,0,0,.1);
	box-sizing: border-box;
	display: flex;
	flex-direction: row;
	font: normal normal normal .9rem/1 sans-serif;
	justify-content: space-between;
	margin: .1rem;
	padding: .5rem .54rem;
	right: 0;
	
}
#root:hover #node {
	
	animation: in .2s ease .0s 1 normal forwards running;
	
}
@keyframes in {
	
	from { opacity: 0; translate: -0% 0%; }
	to { opacity: 1; translate: -10% 0%; }
	
}
:host(:not([selected])) #node {
	
	box-shadow:	none;
	
}
:host(:not([selected])) #node:hover {
	
	background: rgba(0,0,0,.08);
	
}

#content {
	
	align-items: center;
	display: flex;
	
}
#icon {
	
	margin-bottom: .2rem;
	
}

.ctrl {
	
	display: none;
	
}

:host(tab-button[selected]) .ctrl {
	
	display: block;
	
}